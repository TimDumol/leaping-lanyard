// Generated by CoffeeScript 1.6.2
(function() {
  var app, database, databaseLength, express;

  express = require('express');

  database = {
    1: 'This is the first message!',
    2: 'This is the second message!'
  };

  databaseLength = 2;

  app = express();

  app.use(express.logger('dev'));

  app.use(express.bodyParser());

  app.use(app.router);

  app.get('/api/messages/:id', function(request, response, next) {
    var id, message;

    id = request.params['id'];
    message = database[id];
    if (message != null) {
      return response.send(database[id]);
    } else {
      return next(new Error('Message does not exist'));
    }
  });

  app.get('/api/messages/', function(request, response, next) {
    return response.send(JSON.stringify(database));
  });

  app.post('/api/messages', function(request, response, next) {
    var message;

    message = request.body['message'];
    database[++databaseLength] = message;
    return response.send(databaseLength.toString());
  });

  app.put('/api/messages/:id', function(request, response, next) {
    var id, message;

    id = request.params['id'];
    message = request.body['message'];
    if (id in database) {
      database[id] = message;
      return response.send('Updated the message!');
    } else {
      return next(new Error('Message does not exist'));
    }
  });

  app["delete"]('/api/messages/:id', function(request, response, next) {
    var id;

    id = request.params['id'];
    if (id in database) {
      delete database[id];
      return response.send('Deleted the message!');
    } else {
      return next(new Error('Message does not exist'));
    }
  });

  app.use(express["static"](__dirname + '/../frontend/'));

  app.listen(8080);

  console.log('Listening on port 8080...');

}).call(this);
